<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jbb</groupId>
    <artifactId>jbb-parent</artifactId>
    <version>0.7.0-lib-logging-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>jBB Application</name>
    <description>Java bulletin board system</description>
    <url>https://github.com/jbb-project/jbb</url>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>
            scm:git:git@github.com:jbb-project/jbb.git
        </connection>
        <developerConnection>
            scm:git:git@github.com:jbb-project/jbb.git
        </developerConnection>
        <url>https://github.com/jbb-project/jbb/tree/develop</url>
        <tag>HEAD</tag>
    </scm>
    <issueManagement>
        <system>Redmine</system>
        <url>http://www.hostedredmine.com/projects/jbb</url>
    </issueManagement>
    <ciManagement>
        <system>Jenkins</system>
        <url>http://vps289371.ovh.net:8000/</url>
    </ciManagement>

    <prerequisites>
        <maven>3.1.1</maven>
    </prerequisites>

    <pluginRepositories>
        <pluginRepository>
            <id>jbb-plugin-releases</id>
            <name>jBB Releases Nexus OSS Repo</name>
            <url>http://vps297817.ovh.net:8081/nexus/content/repositories/releases</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>jbb-releases</id>
            <name>jBB Releases Nexus OSS Repo</name>
            <url>http://vps297817.ovh.net:8081/nexus/content/repositories/releases</url>
        </repository>
    </repositories>

    <properties>
        <project.java.version>1.8</project.java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <sonar.branch>${project.version}</sonar.branch>
        <sonar.scm.disabled>true</sonar.scm.disabled>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${session.executionRootDirectory}/target/jacoco-it.exec
        </sonar.jacoco.itReportPath>
        <!-- default: none. Set by Jenkins -->
        <build.number/>

        <skipTests>false</skipTests>
        <skipUnitTests>${skipTests}</skipUnitTests>
        <skipIntegrationTests>${skipTests}</skipIntegrationTests>

        <!-- DEFAULT LOG LEVELS ONLY(!!!) DURING TEST EXECUTION -->
        <testLogLevel>OFF</testLogLevel>
        <testSqlLogLevel>OFF</testSqlLogLevel>

        <!--FIX ME config -->
        <!--artifact taken from jBB Releases Nexus OSS Repo -->
        <fix.me.enforcer.rule.maven.version>1.0.0</fix.me.enforcer.rule.maven.version>
        <fix.me.files.to.scan>**/*.java,**/*.xml,**/*.properties,**/*.html,**/*.js
        </fix.me.files.to.scan>
        <fix.me.check.test.sources>true</fix.me.check.test.sources>

        <!-- MAVEN PLUGINS -->
        <maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.5.1</maven.compiler.plugin.version>
        <maven.resources.plugin.version>3.0.1</maven.resources.plugin.version>
        <maven.install.plugin.version>2.5.2</maven.install.plugin.version>
        <maven.pmd.plugin.version>3.6</maven.pmd.plugin.version>
        <maven.findbugs.plugin.version>3.0.4</maven.findbugs.plugin.version>
        <maven.enforcer.plugin.version>1.4.1</maven.enforcer.plugin.version>
        <maven.jacoco.plugin.version>0.7.7.201606060606</maven.jacoco.plugin.version>
        <maven.surefile.plugin.version>2.19.1</maven.surefile.plugin.version>
        <maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>
        <maven.jar.plugin.version>2.6</maven.jar.plugin.version>
        <maven.war.plugin.version>2.6</maven.war.plugin.version>
        <maven.github.site.plugin.version>0.12</maven.github.site.plugin.version>
        <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
        <maven.site.plugin.version>3.5.1</maven.site.plugin.version>
        <maven.pitest.plugin.version>1.1.10</maven.pitest.plugin.version>
        <maven.antrun.plugin.version>1.8</maven.antrun.plugin.version>
        <maven.cargo.plugin.version>1.5.0</maven.cargo.plugin.version>
        <maven.serenity.plugin.version>1.1.40</maven.serenity.plugin.version>
        <maven.scm.plugin.version>1.9.5</maven.scm.plugin.version>
        <maven.jmeter.plugin.version>2.0.3</maven.jmeter.plugin.version>
        <maven.jmeter.analysis.plugin.version>1.0.6</maven.jmeter.analysis.plugin.version>
        <maven.jqassistant.plugin.version>1.1.3</maven.jqassistant.plugin.version>
        <maven.docker.plugin.version>0.4.13</maven.docker.plugin.version>
        <maven.groovy.plugin.version>1.5</maven.groovy.plugin.version>
    </properties>

    <profiles>
        <profile>
            <id>fast</id>
            <properties>
                <skipEnforcer>true</skipEnforcer>
                <skipFixCheck>true</skipFixCheck>
                <skipAnalysis>true</skipAnalysis>
                <skipArchitectureCheck>true</skipArchitectureCheck>
                <skipUnitTests>true</skipUnitTests>
                <skipIntegrationTests>true</skipIntegrationTests>
                <skipEndToEndTests>true</skipEndToEndTests>
                <skipMutationTests>true</skipMutationTests>
                <skipLoadTests>true</skipLoadTests>
                <defaultLoggingLevel>DEBUG</defaultLoggingLevel>
                <defaultSqlLoggingLevel>DEBUG</defaultSqlLoggingLevel>
                <defaultLogFileSize>100 MB</defaultLogFileSize>
                <defaultMaxLogFileAmount>7</defaultMaxLogFileAmount>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <skipEnforcer>false</skipEnforcer>
                <skipFixCheck>true</skipFixCheck>
                <skipAnalysis>false</skipAnalysis>
                <skipArchitectureCheck>false</skipArchitectureCheck>
                <skipUnitTests>false</skipUnitTests>
                <skipIntegrationTests>false</skipIntegrationTests>
                <skipEndToEndTests>true</skipEndToEndTests>
                <skipMutationTests>true</skipMutationTests>
                <skipLoadTests>true</skipLoadTests>
                <defaultLoggingLevel>DEBUG</defaultLoggingLevel>
                <defaultSqlLoggingLevel>DEBUG</defaultSqlLoggingLevel>
                <defaultLogFileSize>100 MB</defaultLogFileSize>
                <defaultMaxLogFileAmount>7</defaultMaxLogFileAmount>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>acc</id>
            <properties>
                <skipEnforcer>false</skipEnforcer>
                <skipFixCheck>false</skipFixCheck>
                <skipAnalysis>false</skipAnalysis>
                <skipArchitectureCheck>false</skipArchitectureCheck>
                <skipUnitTests>false</skipUnitTests>
                <skipIntegrationTests>false</skipIntegrationTests>
                <skipEndToEndTests>false</skipEndToEndTests>
                <skipMutationTests>true</skipMutationTests>
                <skipLoadTests>true</skipLoadTests>
                <defaultLoggingLevel>INFO</defaultLoggingLevel>
                <defaultSqlLoggingLevel>INFO</defaultSqlLoggingLevel>
                <defaultLogFileSize>100 MB</defaultLogFileSize>
                <defaultMaxLogFileAmount>30</defaultMaxLogFileAmount>
            </properties>
        </profile>
        <profile>
            <id>pro</id>
            <properties>
                <skipEnforcer>false</skipEnforcer>
                <skipFixCheck>false</skipFixCheck>
                <skipAnalysis>false</skipAnalysis>
                <skipArchitectureCheck>false</skipArchitectureCheck>
                <skipUnitTests>false</skipUnitTests>
                <skipIntegrationTests>false</skipIntegrationTests>
                <skipEndToEndTests>false</skipEndToEndTests>
                <skipMutationTests>false</skipMutationTests>
                <skipLoadTests>false</skipLoadTests>
                <defaultLoggingLevel>INFO</defaultLoggingLevel>
                <defaultSqlLoggingLevel>INFO</defaultSqlLoggingLevel>
                <defaultLogFileSize>100 MB</defaultLogFileSize>
                <defaultMaxLogFileAmount>30</defaultMaxLogFileAmount>
            </properties>
        </profile>
    </profiles>

    <modules>
        <module>jbb-bom</module>
        <module>implementation</module>
        <module>distributes</module>
        <module>qa-testing</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jbb</groupId>
                <artifactId>jbb-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven.pmd.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${maven.findbugs.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.jbb.utils</groupId>
                            <artifactId>fix-me-enforcer-rule</artifactId>
                            <version>${fix.me.enforcer.rule.maven.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven.jacoco.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefile.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.github</groupId>
                    <artifactId>site-maven-plugin</artifactId>
                    <version>${maven.github.site.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>${maven.cargo.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>net.serenity-bdd.maven.plugins</groupId>
                    <artifactId>serenity-maven-plugin</artifactId>
                    <version>${maven.serenity.plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>net.serenity-bdd.maven.plugins</groupId>
                            <artifactId>serenity-maven-plugin</artifactId>
                            <version>${maven.serenity.plugin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${maven.pitest.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>${maven.scm.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.lazerycode.jmeter</groupId>
                    <artifactId>jmeter-maven-plugin</artifactId>
                    <version>${maven.jmeter.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.lazerycode.jmeter</groupId>
                    <artifactId>jmeter-analysis-maven-plugin</artifactId>
                    <version>${maven.jmeter.analysis.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.buschmais.jqassistant.scm</groupId>
                    <artifactId>jqassistant-maven-plugin</artifactId>
                    <version>${maven.jqassistant.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${maven.docker.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <version>${maven.groovy.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${project.java.version}</source>
                    <target>${project.java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <message>Use java 8!</message>
                                    <version>1.8</version>
                                </requireJavaVersion>
                                <!--<reactorModuleConvergence>-->
                                <!--<ignoreModuleDependencies>false</ignoreModuleDependencies>-->
                                <!--<message>The reactor is not valid</message>-->
                                <!--</reactorModuleConvergence>-->
                                <requirePluginVersions>
                                    <message>Best Practice is to always define plugin versions!
                                    </message>
                                    <banLatest>true</banLatest>
                                    <banRelease>true</banRelease>
                                    <banSnapshots>true</banSnapshots>
                                    <phases>
                                        validate,compile,test,package,verify,install,deploy,site
                                    </phases>
                                </requirePluginVersions>
                                <requireReleaseDeps>
                                    <message>No Snapshots Allowed!</message>
                                    <excludes>
                                        <exclude>org.jbb.*:*</exclude>
                                    </excludes>
                                    <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
                                </requireReleaseDeps>
                                <requireUpperBoundDeps/>
                            </rules>
                            <fail>true</fail>
                            <skip>${skipEnforcer}</skip>
                        </configuration>
                    </execution>

                    <execution>
                        <id>fix-me-check</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <myCustomRule implementation="org.jbb.utils.Fix_MeEnforcerRule">
                                    <skip>${skipFixCheck}</skip>
                                    <filesToScan>${fix.me.files.to.scan}</filesToScan>
                                    <checkTestSource>${fix.me.check.test.sources}</checkTestSource>
                                    <encoding>${project.build.sourceEncoding}</encoding>
                                </myCustomRule>
                            </rules>
                            <skip>${skipFixCheck}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <skip>${skipAnalysis}</skip>
                    <printFailingErrors>true</printFailingErrors>
                    <failurePriority>2</failurePriority>
                    <linkXRef>false</linkXRef>
                    <rulesets>
                        <ruleset>java-basic</ruleset>
                        <ruleset>java-codesize</ruleset>
                        <ruleset>java-design</ruleset>
                        <ruleset>java-empty</ruleset>
                        <ruleset>java-imports</ruleset>
                        <ruleset>java-junit</ruleset>
                        <ruleset>java-naming</ruleset>
                        <ruleset>java-strictexception</ruleset>
                        <ruleset>java-strings</ruleset>
                        <ruleset>java-sunsecure</ruleset>
                        <ruleset>java-typeresolution</ruleset>
                        <ruleset>java-unnecessary</ruleset>
                        <ruleset>java-unusedcode</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipAnalysis}</skip>
                    <threshold>High</threshold>
                </configuration>
                <executions>
                    <execution>
                        <id>run</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <configuration>
                            <skip>${skipUnitTests}</skip>
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                        </configuration>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pre-itest</id>
                        <configuration>
                            <skip>${skipIntegrationTests}</skip>
                            <destFile>${sonar.jacoco.itReportPath}</destFile>
                        </configuration>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                    <skipTests>${skipUnitTests}</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <trimStackTrace>false</trimStackTrace>
                    <skipTests>${skipTests}</skipTests>
                    <skipITs>${skipIntegrationTests}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <id>failsafe-integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <configuration>
                    <targetClasses>
                        <param>org.jbb*</param>
                    </targetClasses>
                    <targetTests>
                        <param>org.jbb.*Test</param>
                    </targetTests>
                    <threads>3</threads>
                    <outputFormats>
                        <outputFormat>HTML</outputFormat>
                        <outputFormat>XML</outputFormat>
                    </outputFormats>
                    <timestampedReports>false</timestampedReports>
                    <mutators>
                        <mutator>CONDITIONALS_BOUNDARY</mutator>
                        <mutator>NEGATE_CONDITIONALS</mutator>
                        <mutator>REMOVE_CONDITIONALS</mutator>
                        <mutator>MATH</mutator>
                        <mutator>INCREMENTS</mutator>
                        <mutator>INVERT_NEGS</mutator>
                        <mutator>INLINE_CONSTS</mutator>
                        <mutator>RETURN_VALS</mutator>
                        <mutator>VOID_METHOD_CALLS</mutator>
                    </mutators>
                    <mutationThreshold>0</mutationThreshold>
                    <failWhenNoMutations>false</failWhenNoMutations>
                    <skip>${skipMutationTests}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>mutation-coverage</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.buschmais.jqassistant.scm</groupId>
                <artifactId>jqassistant-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>scan</goal>
                            <goal>analyze</goal>
                        </goals>
                        <configuration>
                            <failOnViolations>true</failOnViolations>
                            <skip>${skipArchitectureCheck}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <configuration>
                    <tag>${project.version}</tag>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filter</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources-filter</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

    <dependencies>
        <!-- CORE LIBS -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- TESTING & MOCKING TOOLS -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.meanbean</groupId>
            <artifactId>meanbean</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
        </dependency>

        <!-- LOGGING COMPONENTS -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>

        <!-- SPRING COMPONENTS -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <!-- DATA ACCESS COMPONENTS -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml</groupId>
            <artifactId>classmate</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
        </dependency>
    </dependencies>
</project>
